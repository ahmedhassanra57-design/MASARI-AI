// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  name      String?
  image     String?
  password  String?
  role      String     @default("user")
  income    Income[]
  expenses  Expense[]
  budgets   Budget[]
  notifications Notification[]
  profile   Profile?
  receipts  Receipt[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Profile {
  id            String   @id @default(cuid())
  userId        String   @unique
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  currency      String   @default("USD")
  language      String   @default("en")
  theme         String   @default("light")
  dateFormat    String   @default("MM/DD/YYYY")
  notifications Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Income {
  id          String   @id @default(cuid())
  amount      Float
  description String
  category    String
  date        DateTime
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
  @@index([date])
  @@index([userId, date])
  @@index([category])
}

model Expense {
  id          String   @id @default(cuid())
  amount      Float
  description String
  category    String
  date        DateTime
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
  @@index([date])
  @@index([userId, date])
  @@index([category])
}

model Budget {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  name       String
  amount     Float
  period     String
  startDate  DateTime
  categories BudgetCategory[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([userId])
}

model BudgetCategory {
  id        String   @id @default(cuid())
  budgetId  String
  budget    Budget   @relation(fields: [budgetId], references: [id], onDelete: Cascade)
  name      String
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([budgetId])
}

model BudgetTemplate {
  id         String   @id @default(cuid())
  userId     String
  name       String
  categories BudgetTemplateCategory[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([userId])
}

model BudgetTemplateCategory {
  id        String   @id @default(cuid())
  templateId String
  name      String
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  template BudgetTemplate @relation(fields: [templateId], references: [id], onDelete: Cascade)

  @@index([templateId])
}

model Notification {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  type      String
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Receipt {
  id            String   @id @default(cuid())
  userId        String
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  merchant      String
  date          DateTime
  total         Float
  imageUrl      String
  category      String?
  paymentMethod String?
  items         Json?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([userId])
  @@index([date])
  @@index([userId, date])
} 